---
title: "Reproducible Research: Peer Assessment 1"
output: 
  html_document:
    keep_md: true
---


## Loading and preprocessing the data

```{r, message=FALSE, warning=FALSE}
library(ggplot2)
library(dplyr)
library(xtable)
setwd("C:/Data")
Activity <- data.table::fread("activity.csv", header=TRUE)

#getting mean number of steps
sumstepsperday<-tapply(Activity$steps, Activity$date, sum,na.rm=TRUE)
#this is the total number of steps per day
meanstepsperday<-tapply(Activity$steps, Activity$date, mean,na.rm=TRUE)
#this is the mean number of steps for all days
medianstepsperday<-tapply(Activity$steps, Activity$date, median,na.rm=TRUE)
#this is the median number of steps for all days
daydata<-unique(strptime(Activity$date,"%Y-%m-%d"))

```

## What is mean total number of steps taken per day?
There are multiple ways to understand what is required in this assignment. Downbelow i show two graphs. The first one is based on the assumption that what is required is the mean steps per day (for every day). In this case the mean for every day has to be reported in a table form. The second graph assumes that what is needed is just the average of all days. In this case the mean is simply one mean as well as the median is just one median

Here is the first way to show the output

```{r, message=FALSE, warning=FALSE}

plot(x = daydata, y = sumstepsperday, main = "Total Steps per day", xlab = "Date", ylab = "Steps", type = "h")
Output1<-data.frame(daydata,meanstepsperday,medianstepsperday)
Output1
```
Now the second way to show the output

```{r, message=FALSE, warning=FALSE}
hist(sumstepsperday)
MeanStepsPerDay<-mean(tapply(Activity$steps, Activity$date, sum,na.rm=TRUE))
MedianStepsPerDay<-median(tapply(Activity$steps, Activity$date, sum,na.rm=TRUE))
cat("The mean number of steps per day for all days is", MeanStepsPerDay, "steps. While the median is",MedianStepsPerDay,"steps")

```
## What is the average daily activity pattern?
```{r, message=FALSE, warning=FALSE}

#getting mean number of steps
Meanstepsperinterval<-tapply(Activity$steps, Activity$interval, mean,na.rm=TRUE)
#this is the Mean number of steps per interval
oneday <- filter(Activity,Activity$date=="2012-10-01")
time <-oneday$interval
plot(time,Meanstepsperinterval,type = "l")
MaxInterval<-which.max(Meanstepsperinterval)
cat("The max number of steps occurs at interval", MaxInterval[[1]], "which corresponds to",Activity$interval[MaxInterval[[1]]] )
```


## Imputing missing values
```{r, message=FALSE, warning=FALSE}
#getting the number of NA
NAInTheData<-sum(is.na(Activity))
cat("The steps are showing NA values", NAInTheData, "times")

cat("Now we can handle the NA by substituiting them with the average number of steps for the same period for all the data set")
ActivityNAFilled<-Activity
ActivityNAFilled$AvgSteps<-Meanstepsperinterval
ActivityNAFilled$steps[is.na(ActivityNAFilled$steps)]<-ActivityNAFilled$AvgSteps[which(is.na(ActivityNAFilled$steps))]

#getting mean number of steps
sumstepsperday<-tapply(ActivityNAFilled$steps, ActivityNAFilled$date, sum,na.rm=TRUE)
#this is the total number of steps per day
meanstepsperday<-tapply(ActivityNAFilled$steps, ActivityNAFilled$date, mean,na.rm=TRUE)
#this is the mean number of steps for all days
medianstepsperday<-tapply(ActivityNAFilled$steps, ActivityNAFilled$date, median,na.rm=TRUE)
#this is the median number of steps for all days

plot(x = daydata, y = sumstepsperday, main = "Total Steps per day", xlab = "Date", ylab = "Steps", type = "h")
```
## It is clear that both plots are different. Now we show the second way again for estimating this output as we have done before

```{r, message=FALSE, warning=FALSE}
hist(sumstepsperday)
MeanStepsPerDay<-mean(tapply(ActivityNAFilled$steps, ActivityNAFilled$date, sum,na.rm=TRUE))
MedianStepsPerDay<-median(tapply(ActivityNAFilled$steps, ActivityNAFilled$date, sum,na.rm=TRUE))
cat("The mean number of steps per day for all days with NA filled is", MeanStepsPerDay, "steps. While the median is",MedianStepsPerDay,"steps")

```

## Are there differences in activity patterns between weekdays and weekends?

```{r, message=FALSE, warning=FALSE}

library(chron)
#now adding a variable with True for a weekend and False for weekday
ActivityNAFilled$DayType<-is.weekend(ActivityNAFilled$date)
WeekdayData<-subset(ActivityNAFilled,ActivityNAFilled$DayType==FALSE)
WeekEndData<-subset(ActivityNAFilled,ActivityNAFilled$DayType==TRUE)
MeanstepsperintervalWeekDay<-tapply(WeekdayData$steps, WeekdayData$interval, mean,na.rm=TRUE)
MeanstepsperintervalWeekEnd<-tapply(WeekEndData$steps, WeekEndData$interval, mean,na.rm=TRUE)

layout(matrix(1:2, ncol = 1), widths = 1.5, heights = c(5,5), respect = FALSE)
par(mar = c(0, 5, 5, 2.1))
plot(time,MeanstepsperintervalWeekDay,type = "l", ylab = "WeekDay")
par(mar = c(5, 5, 0, 2.1))
plot(time,MeanstepsperintervalWeekEnd,type = "l",ylab = "WeekEnd")

```
